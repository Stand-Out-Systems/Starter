package com.example.demo.beer;

import java.util.Collection;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
//@CrossOrigin(origins = "*", allowedHeaders = "*")
public class BeerController {
    private BeerRepository repository;

    public BeerController(BeerRepository repository) {
        this.repository = repository;
    }

    @GetMapping("/good-beers")
//    @CrossOrigOin(origins = "http://localhost:4200")
    public Collection<Beer> goodBeers() {

        return repository.findAll().stream()
                .filter(this::isGreat)
                .collect(Collectors.toList());
    }
    
    @PostMapping("/good-beers")
    public Beer createBeer(@RequestBody String name) {
    	System.out.println("HERE");
    	if(this.beerExists(name) != null) {
    		try{
    			Optional<Beer> beerOption = repository.findById(this.beerExists(name));
    			if(beerOption.isPresent()) {
    				Beer beer = beerOption.get();
    				return this.repository.save(beer);	
    			} else {
    				return null;
    			}
//    			
    		} catch(Exception e) {
    			e.printStackTrace();
    		}
    	}
    	else {
    		return repository.save(new Beer(name));	
    	}
		return null;
    	
    }

    private boolean isGreat(Beer beer) {
        return !beer.getName().equals("Budweiser") &&
                !beer.getName().equals("Coors Light") &&
                !beer.getName().equals("PBR");
    }
    
    private Long beerExists(String name) {
    	
    	for(Beer beer: repository.findAll()) {
    		if(beer.getName() == name) {
    			return beer.getId();
    		}
    	}
    	return null;
    }
}